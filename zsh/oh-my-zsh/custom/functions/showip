#!/usr/bin/env zsh
# Show IP address

local function __showip_usage() {
  (>&2 print \
"Usage:
  showip [options] [<iface>]

List interfaces with their IPv4 address, if none is specified list only the
ones that are assigned an IPv4 address.

If a interface with no address is specified then the string 'no address' is
printed.

Options:
  -h, --help             Show this help and exits.

Example:
  showip eth0")
}

local function __showip() {

  local opt

  while getopts ":h" opt; do
    case $opt in
      h)
        __showip_usage
        return 0
        ;;
      *)
        (>&2 echo "Flag $opt not recognized." )
        ;;
    esac
  done

  # ip_regex:
  #  - a number followed by a colon and the name of the interface followed by a
  #    colon
  #  - inet followed by an IP address
  # --> the result is the interface name, followed by a tab and then the IP.
  local ip_regex
  ip_regex='s#[0-9]+: (\w+)\s+ inet '
  ip_regex+='([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}).+'
  ip_regex+='#\1\t\2#g'

  # set tab width to 16
  tabs 16

  # does the work, select the IP and apply the regex above
  if [ $# -lt 1 ] ; then
    ip -4 -o addr show | grep -B2 "inet " | sed -r "$ip_regex"
  else
    local iface
    for iface in "$@"; do
      local res
      res=$(ip -4 -o addr show "$iface" | grep -B2 "inet " | sed -r "$ip_regex")
      if [[ -z "$res" ]]; then
        echo -e "${iface}"'\tno address'
      else
        echo "$res"
      fi
    done
  fi

  # set tab width back to default value (SHELL_TAB_SIZE
  tabs "$SHELL_TAB_SIZE"
}

__showip "$@"