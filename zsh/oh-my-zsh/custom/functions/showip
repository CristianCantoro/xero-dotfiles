#!/usr/bin/env zsh
# Show IP address

local function __showip_usage() {
  (>&2 print \
"Usage:
  showip ( -4 | -6 ) [<iface>]
  showip -h

List interfaces with their IPv4 address, if none is specified list only the
ones that are assigned an IPv4 address.

If a interface with no address is specified then the string 'no address' is
printed.

Options:
  -4              Show only IPv4 addresses.
  -6              Show only IPv6 addresses.
  -h              Show this help and exits.

Example:
  showip eth0")
}

local function __showip() {

  declare -a args
  local opt flag count
  local ipv4 ipv6

  flag=''
  count=1
  while getopts ":h46" opt; do
    case $opt in
      h)
        __showip_usage
        return 0
        ;;
      4)
        ipv4=true
        flag='-4'
        count=$((count+1))
        ;;
      6)
        ipv6=true
        flag='-6'
        count=$((count+1))
        ;;
      *)
        (>&2 echo "Flag $opt not recognized." )
        ;;
    esac
  done

  if [[ $ipv4 && $ipv6 ]]; then
    (>&2 echo "Options -4 and -6 are incompatible." )
    return 1
  fi

  args=(${@})
  if [ $count -gt 1 ]; then
    args=(${@[$count,-1]})
  fi

  # does the work, select the IP and apply the regex above
  if [ $((#-count)) -lt 0 ] ; then
    ip ${flag:-} -o addr show | sed -re 's#[0-9]+:\s+(.+)\s+inet(6)?#\1#g' | \
      sed -re 's#(([0-9]{1,3}[\.]){3}[0-9]{1,3}(/[0-9]{1,2})?|(.{0,4}:?){8}(/[0-9]{1,3})).+#\1#g' | \
      awk '{iface=$1; $1=""; printf "%-18s %s\n",iface,$0}'
  else
    local iface
    local res
    for iface in $args; do
      res=''
      res=$(ip ${flag:-} -o addr show "$iface" | sed -re 's#[0-9]+:\s+(.+)\s+inet(6)?#\1#g' | \
            sed -re 's#(([0-9]{1,3}[\.]){3}[0-9]{1,3}(/[0-9]{1,2})?|(.{0,4}:?){8}(/[0-9]{1,3})).+#\1#g' | \
            awk '{iface=$1; $1=""; printf "%-18s %s\n",iface,$0}')
      if [ -z "$res" ]; then
        echo -e "${iface}"'\tno address'
      else
        echo "$res"
      fi
    done
  fi

}

__showip "$@"